// <auto-generated />
using MVCCRUD2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCCRUD2.Migrations
{
    [DbContext(typeof(Mvccrud2Context))]
    [Migration("20241118221315_UpdatePersonaInheritance")]
    partial class UpdatePersonaInheritance
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVCCRUD2.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasenia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direcc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPersona");

                    b.ToTable("Personas");

                    b.HasDiscriminator().HasValue("Persona");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MVCCRUD2.Models.Administrador", b =>
                {
                    b.HasBaseType("MVCCRUD2.Models.Persona");

                    b.Property<string>("Cdl")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("MVCCRUD2.Models.Usuario", b =>
                {
                    b.HasBaseType("MVCCRUD2.Models.Persona");

                    b.HasDiscriminator().HasValue("Usuario");
                });

            modelBuilder.Entity("MVCCRUD2.Models.Administrador", b =>
                {
                    b.HasOne("MVCCRUD2.Models.Persona", "IdPersonaNavigation")
                        .WithOne("Administrador")
                        .HasForeignKey("MVCCRUD2.Models.Administrador", "IdPersona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("MVCCRUD2.Models.Usuario", b =>
                {
                    b.HasOne("MVCCRUD2.Models.Persona", "IdPersonaNavigation")
                        .WithOne("Usuario")
                        .HasForeignKey("MVCCRUD2.Models.Usuario", "IdPersona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("MVCCRUD2.Models.Persona", b =>
                {
                    b.Navigation("Administrador");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
